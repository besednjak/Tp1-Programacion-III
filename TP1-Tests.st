TestCase subclass: #AlgoFixTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!AlgoFixTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/25/2020 21:49'!test07PresupuestoPinteoresConPincelUtilizanDiferentesPinturasHacenDescuendoDel50PorcientoEnMoCuandoM2EsMayor40EntoncesOfreceElMenorPresupuesto	| algoFix venier presupuesto valorEsperadoConAlba borrar|	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 500.	algoFix registrarPintorDePincel: 'Eugenio' conValorHora: 600.	algoFix registrarPintorDeRodillo: 'Tomas' conValorHora: 4000.	venier := algoFix crearPintura: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 55 conPintura: venier.		"El descuento del %50 lo hacen los pintores con pincel!!"	valorEsperadoConAlba := algoFix  		manoDeObra: 			(55 "M2" * 2 "horas" * 500 "Precio" * 2 "manos" * 0.5) 		masMateriales: 			(55 "M2" * 4 "litros" * 150 "Precio" * 2 "manos").	borrar := (presupuesto pintorMasBarato) manoDeObraPara: 55 usando: venier.	self assert: 'Pablo' equals: (presupuesto responsable).	self assert: valorEsperadoConAlba closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:20'!test01PresupuestoPintorUtilizaPincelConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba  presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda 2 horas en pintar un M2 (metro cuadrado), 	"	"Consumo de material:		- Para pincel cada M2 lleva 4 litros de pintura	"	"Pinturas:		- Alba   requiere '1' mano con pincel y '1' mano con rodillo	"	algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix		manoDeObra: 			(5 "M2" * 2 "horas" * 500 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:20'!test03PresupuestoPintorUtilizaRodilloConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDeRodillo: 'Diego' conValorHora: 200.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix  		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:23'!test05PresupuestoPinteoresConPincelRodilloOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 500.	algoFix registrarPintorDeRodillo: 'Edson' conValorHora: 800.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 340 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 20 conPintura: alba.	valorEsperado := algoFix 		manoDeObra: 			(20 "M2" * 2 "horas" * 500 "Precio" * 1 "manos") 		masMateriales: 			(20 "M2" * 4 "litros" * 340 "Precio" * 1 "manos").	self assert: 'Pablo' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:21'!test06PresupuestoPinteoresConPincelUtilizanDiferentesPinturasOfreceElMenorPresupuesto	| algoFix venier presupuesto valorEsperadoConVenier |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Martin' conValorHora: 500.	algoFix registrarPintorDePincel: 'Sebastian' conValorHora: 600.	venier := algoFix crearPintura: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 15 conPintura: venier.		valorEsperadoConVenier := algoFix 		manoDeObra: 			(15 "M2" * 2 "horas" * 500 "Precio" * 2 "manos") 		masMateriales: 			(15 "M2" * 4 "litros" * 150 "Precio" * 2 "manos").	self assert: 'Martin' equals: (presupuesto responsable).	self assert: valorEsperadoConVenier closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:23'!test08PresupuestoConTecnicaPincel	| algoFix alba venier presupuesto valorEsperadoConAlba valorEsperadoConVenier |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Edson' conValorHora: 500.	algoFix registrarPintorDeRodillo: 'Edson' conValorHora: 200.	algoFix registrarPintorDeRodillo: 'Pablo' conValorHora: 800.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	venier := algoFix crearPintura: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperadoConAlba := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Edson' equals: (presupuesto responsable).	self assert: valorEsperadoConAlba closeTo: (presupuesto valor) precision: precision.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: venier.	valorEsperadoConVenier := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 150 "Precio" * 1 "manos").	self assert: 'Edson' equals: (presupuesto responsable).	self assert: valorEsperadoConVenier closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:20'!test02PresupuestoPintoresUtilizandoPincelConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura	"		"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	algoFix registrarPintorDePincel: 'Eugenio' conValorHora: 450.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 150 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 10 conPintura: alba.	valorEsperado := algoFix  		manoDeObra: 			(10 "M2" * 2 "horas" * 450 "Precio" * 1 "manos") 		masMateriales: 			(10 "M2" * 4 "litros" * 150 "Precio" * 1 "manos").	self assert: 'Eugenio' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/23/2020 02:39'!test04PresupuestoPintoresUtilizandoRodilloConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDeRodillo: 'Diego' conValorHora: 200.	algoFix registrarPintorDeRodillo: 'Eugenio' conValorHora: 130.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 20 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 130 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 20 "Precio" * 1 "manos").	self assert: 'Eugenio' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'running' stamp: 'tomas 5/12/2020 16:14'!setUp	precision := 0.001! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoFixTest class	instanceVariableNames: ''!!AlgoFixTest class methodsFor: 'as yet unclassified' stamp: 'MarioBesednjak 5/25/2020 22:17'!packageNamesUnderTest	^ #('TP1')! !TestCase subclass: #AlgoFixTestAlumno	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!AlgoFixTestAlumno methodsFor: 'running' stamp: 'MarioBesednjak 5/28/2020 22:05'!setUp	precision := 0.001! !!AlgoFixTestAlumno methodsFor: 'tests' stamp: 'MarioBesednjak 5/28/2020 22:33'!test02SeIntentaCalcularPresupuestoSinPinturaHayUnError	| algoFix alba |	algoFix := AlgoFix new.	algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	self should: [algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 10 conPintura: alba] raise: SePidioArmarPresupuestoSinIngresarPinturaError. ! !!AlgoFixTestAlumno methodsFor: 'tests' stamp: 'MarioBesednjak 5/28/2020 22:34'!test01SeIntentaCalcularPresupuestoMetrosCuadradosMenorAUnoHayUnError	| algoFix alba |	algoFix := AlgoFix new.	algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.		alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	self should: [algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: -2 conPintura: alba] raise: MetrosCuadradosMenoresAUnoError. ! !TestCase subclass: #PintorDePincelTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!PintorDePincelTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/25/2020 22:29'!test03CalcularCostoDePresupuestoDeManoDeObraConMasDe40MetrosCuadradosAplicaDescuento	| pintor pintura metrosCuadrados costoDeManoDeObra |		pintor:= PintorDePincel queSeLlama: 'Edson' yCobraPorHora: 248.	pintura := Pintura deColor: 'Azul' conPrecioPorLitro: 148 yManosDePinturaConPincel: 5 yConRodillo: 2. 	metrosCuadrados := 90.		costoDeManoDeObra := pintor manoDeObraPara: metrosCuadrados usando: pintura.		self assert: costoDeManoDeObra closeTo: (metrosCuadrados * (pintura manosDePinturaConPincel) * (pintor horasDeTrabajo) * (pintor precioPorHora) * (pintor descuento))				! !!PintorDePincelTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/25/2020 22:04'!test01CalcularCostoDePresupuestoDeManoDeObra	| pintor pintura metrosCuadrados costoDeManoDeObra |		pintor:= PintorDePincel queSeLlama: 'Edson' yCobraPorHora: 248.	pintura := Pintura deColor: 'Azul' conPrecioPorLitro: 148 yManosDePinturaConPincel: 5 yConRodillo: 2. 	metrosCuadrados := 20.		costoDeManoDeObra := pintor manoDeObraPara: metrosCuadrados usando: pintura.		self assert: costoDeManoDeObra closeTo: (metrosCuadrados * (pintura manosDePinturaConPincel) * (pintor horasDeTrabajo) * (pintor precioPorHora))				! !!PintorDePincelTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/25/2020 22:28'!test02CalcularCostoDePresupuestoDeManoDeObraCon40MetrosCuadradosAplicaDescuento	| pintor pintura metrosCuadrados costoDeManoDeObra |		pintor:= PintorDePincel queSeLlama: 'Edson' yCobraPorHora: 248.	pintura := Pintura deColor: 'Azul' conPrecioPorLitro: 148 yManosDePinturaConPincel: 5 yConRodillo: 2. 	metrosCuadrados := 40.		costoDeManoDeObra := pintor manoDeObraPara: metrosCuadrados usando: pintura.		self assert: costoDeManoDeObra closeTo: (metrosCuadrados * (pintura manosDePinturaConPincel) * (pintor horasDeTrabajo) * (pintor precioPorHora) * (pintor descuento))				! !TestCase subclass: #PintorDeRodilloTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!PintorDeRodilloTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/23/2020 02:32'!test01CalcularCostoDePresupuestoDeManoDeObra	| pintor pintura metrosCuadrados costoDeManoDeObra |		pintor:= PintorDeRodillo queSeLlama: 'Jose' yCobraPorHora: 9948.	pintura := Pintura deColor: 'Rojo' conPrecioPorLitro: 548 yManosDePinturaConPincel: 15 yConRodillo: 2. 	metrosCuadrados := 8.		costoDeManoDeObra := pintor manoDeObraPara: metrosCuadrados usando: pintura.		self assert: costoDeManoDeObra closeTo: (metrosCuadrados * (pintura manosDePinturaConRodillo) * (pintor horasDeTrabajo) * (pintor precioPorHora) )! !TestCase subclass: #PinturaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!PinturaTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/23/2020 01:46'!test02CalcularCostoDePresupuestoParaMaterialConRodillo	| pintura metrosCuadrados costoDeMaterial litrosDePintura |		metrosCuadrados := 15.	litrosDePintura := 10.	pintura := Pintura deColor: 'Azul' conPrecioPorLitro: 148 yManosDePinturaConPincel: 8 yConRodillo: 1. 	costoDeMaterial := pintura costoDeMaterialUsando: litrosDePintura conRodilloEn: metrosCuadrados.		self assert: costoDeMaterial closeTo: (litrosDePintura * (pintura precioPorLitro) * metrosCuadrados * (pintura manosDePinturaConRodillo)) 		! !!PinturaTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/23/2020 01:46'!test01CalcularCostoDePresupuestoParaMaterialConPincel	| pintura metrosCuadrados costoDeMaterial litrosDePintura |		metrosCuadrados := 15.	litrosDePintura := 10.	pintura := Pintura deColor: 'Azul' conPrecioPorLitro: 148 yManosDePinturaConPincel: 5 yConRodillo: 2. 	costoDeMaterial := pintura costoDeMaterialUsando: litrosDePintura conPincelEn: metrosCuadrados.		self assert: costoDeMaterial closeTo: (litrosDePintura * (pintura precioPorLitro) * metrosCuadrados * (pintura manosDePinturaConPincel)) 		! !TestCase subclass: #PresupuestoParaPintarTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!PresupuestoParaPintarTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/26/2020 00:16'!test05ValorDevuelveElValorDelPresupuestoMasBaratoOfrecidoPorLosPintores		| presupuestoParaPintar pinturaVerde pintorUno pintorDos pintorTres pintorCuatro metrosCuadrados |	metrosCuadrados := 40.	pinturaVerde := Pintura deColor: 'Verde' conPrecioPorLitro: 50 yManosDePinturaConPincel: 2 yConRodillo: 1.		pintorUno := PintorDePincel queSeLlama: 'Edson' yCobraPorHora: 1.	pintorDos := PintorDePincel queSeLlama: 'Jose' yCobraPorHora: 499.	pintorTres := PintorDeRodillo queSeLlama: 'Juan' yCobraPorHora: 1999.	pintorCuatro := PintorDeRodillo queSeLlama: 'Pedro' yCobraPorHora: 1998.		presupuestoParaPintar := PresupuestoParaPintar new.	presupuestoParaPintar agregarPintor: pintorUno; agregarPintor: pintorDos; agregarPintor: pintorTres; agregarPintor: pintorCuatro.		presupuestoParaPintar armarPresupuestosCon: metrosCuadrados y: pinturaVerde.		self assert: (presupuestoParaPintar valor) equals: (pintorUno presupuestoParaPintar: metrosCuadrados conPintura: pinturaVerde).				! !!PresupuestoParaPintarTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/26/2020 00:10'!test04SiHayVariosPintoresConMismoPresupuestoResponsableDevuelveAlPrimeroEnSerRegistrado		| presupuestoParaPintar pinturaVerde pintorUno pintorDos pintorTres metrosCuadrados |	metrosCuadrados := 40.	pinturaVerde := Pintura deColor: 'Verde' conPrecioPorLitro: 50 yManosDePinturaConPincel: 2 yConRodillo: 1.		pintorUno := PintorDePincel queSeLlama: 'Edson' yCobraPorHora: 499.	pintorDos := PintorDePincel queSeLlama: 'Jose' yCobraPorHora: 499.	pintorTres := PintorDePincel queSeLlama: 'Juan' yCobraPorHora: 499.		presupuestoParaPintar := PresupuestoParaPintar new.	presupuestoParaPintar agregarPintor: pintorUno; agregarPintor: pintorDos; agregarPintor: pintorTres.		presupuestoParaPintar armarPresupuestosCon: metrosCuadrados y: pinturaVerde.		self assert: (presupuestoParaPintar responsable) equals: 'Edson'.				! !!PresupuestoParaPintarTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/26/2020 00:05'!test01ResponsableDevuelveElNombreDelPintorConElPresupuestoMasBaratoEntrePintoresDePincel		| presupuestoParaPintar pinturaVerde pintorUno pintorDos metrosCuadrados |	metrosCuadrados := 10.	pinturaVerde := Pintura deColor: 'Verde' conPrecioPorLitro: 50 yManosDePinturaConPincel: 2 yConRodillo: 1.		pintorUno := PintorDePincel queSeLlama: 'Edson' yCobraPorHora: 1.	pintorDos := PintorDePincel queSeLlama: 'Jose' yCobraPorHora: 499.		presupuestoParaPintar := PresupuestoParaPintar new.	presupuestoParaPintar agregarPintor: pintorUno; agregarPintor: pintorDos.		presupuestoParaPintar armarPresupuestosCon: metrosCuadrados y: pinturaVerde.		self assert: (presupuestoParaPintar responsable) equals: 'Edson'.				! !!PresupuestoParaPintarTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/28/2020 22:39'!test06SeIntentaArmarPresupuestoSinPintoresHayUnError	| presupuesto alba |	presupuesto := PresupuestoParaPintar new.	alba := Pintura deColor: 'alba' conPrecioPorLitro: 500 yManosDePinturaConPincel: 1 yConRodillo: 1.	self should: [presupuesto metrosCuadrados: 10 conPintura: alba] raise: SePidioArmarPresupuestoSinTenerPintoresRegistradosError. ! !!PresupuestoParaPintarTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/26/2020 00:03'!test03ResponsableDevuelveElNombreDelPintorConElPresupuestoMasBarato		| presupuestoParaPintar pinturaVerde pintorUno pintorDos pintorTres pintorCuatro metrosCuadrados |	metrosCuadrados := 40.	pinturaVerde := Pintura deColor: 'Verde' conPrecioPorLitro: 50 yManosDePinturaConPincel: 2 yConRodillo: 1.		pintorUno := PintorDePincel queSeLlama: 'Edson' yCobraPorHora: 1.	pintorDos := PintorDePincel queSeLlama: 'Jose' yCobraPorHora: 499.	pintorTres := PintorDeRodillo queSeLlama: 'Juan' yCobraPorHora: 1999.	pintorCuatro := PintorDeRodillo queSeLlama: 'Pedro' yCobraPorHora: 1998.		presupuestoParaPintar := PresupuestoParaPintar new.	presupuestoParaPintar agregarPintor: pintorUno; agregarPintor: pintorDos; agregarPintor: pintorTres; agregarPintor: pintorCuatro.		presupuestoParaPintar armarPresupuestosCon: metrosCuadrados y: pinturaVerde.		self assert: (presupuestoParaPintar responsable) equals: 'Edson'.				! !!PresupuestoParaPintarTest methodsFor: 'tests' stamp: 'MarioBesednjak 5/26/2020 00:06'!test02ResponsableDevuelveElNombreDelPintorConElPresupuestoMasBaratoEntrePintoresDeRodillo		| presupuestoParaPintar pinturaVerde pintorUno pintorDos metrosCuadrados |	metrosCuadrados := 10.	pinturaVerde := Pintura deColor: 'Verde' conPrecioPorLitro: 50 yManosDePinturaConPincel: 2 yConRodillo: 1.		pintorUno := PintorDeRodillo queSeLlama: 'Juan' yCobraPorHora: 1.	pintorDos := PintorDeRodillo queSeLlama: 'Pedro' yCobraPorHora: 499.		presupuestoParaPintar := PresupuestoParaPintar new.	presupuestoParaPintar agregarPintor: pintorUno; agregarPintor: pintorDos.		presupuestoParaPintar armarPresupuestosCon: metrosCuadrados y: pinturaVerde.		self assert: (presupuestoParaPintar responsable) equals: 'Juan'.				! !